{"version":3,"sources":["index.js"],"names":["audioClips","keyCode","keyTrigger","id","url","App","React","useState","volume","setVolume","recording","setRecording","speed","setSpeed","className","map","clip","Pad","type","step","onChange","e","target","value","max","min","onClick","index","recordArray","split","interval","setInterval","audioTag","document","getElementById","currentTime","play","setTimeout","clearInterval","length","active","setActive","useEffect","addEventListener","handleKeyPress","removeEventListener","playSound","prev","src","ReactDOM","render"],"mappings":"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","file":"static/js/main.1bcc3fdb.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst audioClips = [\n  {\n    keyCode: 81,\n    keyTrigger: \"Q\",\n    id: \"Heater-1\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\",\n  },\n  {\n    keyCode: 87,\n    keyTrigger: \"W\",\n    id: \"Heater-2\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3\",\n  },\n  {\n    keyCode: 69,\n    keyTrigger: \"E\",\n    id: \"Heater-3\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3\",\n  },\n  {\n    keyCode: 65,\n    keyTrigger: \"A\",\n    id: \"Heater-4\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3\",\n  },\n  {\n    keyCode: 83,\n    keyTrigger: \"S\",\n    id: \"Clap\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3\",\n  },\n  {\n    keyCode: 68,\n    keyTrigger: \"D\",\n    id: \"Open-HH\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3\",\n  },\n  {\n    keyCode: 90,\n    keyTrigger: \"Z\",\n    id: \"Kick-n'-Hat\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3\",\n  },\n  {\n    keyCode: 88,\n    keyTrigger: \"X\",\n    id: \"Kick\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3\",\n  },\n  {\n    keyCode: 67,\n    keyTrigger: \"C\",\n    id: \"Closed-HH\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3\",\n  },\n];\n\nfunction App() {\n  const [volume, setVolume] = React.useState(1);\n  const [recording, setRecording] = React.useState(\"\");\n  const [speed, setSpeed] = React.useState(0.5);\n\n  const playRecording = () => {\n    let index = 0;\n    let recordArray = recording.split(\" \");\n    const interval = setInterval(() => {\n      const audioTag = document.getElementById(recordArray[index]);\n      audioTag.volume = volume;\n      audioTag.currentTime = 0;\n      audioTag.play();\n      index++;\n    }, speed * 600);\n    setTimeout(\n      () => clearInterval(interval),\n      600 * speed * recordArray.length - 1\n    );\n  };\n\n  return (\n    <div id=\"drum-machine\">\n      <div className=\"bg-info min-vh-100 text-white\" id=\"display\">\n        <div className=\"text-center\">\n          <h2>Drum Machine</h2>\n          <h5>Coded by Dan Bloch</h5>\n          <div className=\"drum-pad\">\n            {audioClips.map((clip) => (\n              <Pad\n                key={clip.id}\n                clip={clip}\n                volume={volume}\n                setRecording={setRecording}\n              />\n            ))}\n          </div>\n\n          <br />\n          <h4>Volume</h4>\n          <input\n            type=\"range\"\n            step=\"0.01\"\n            onChange={(e) => setVolume(e.target.value)}\n            value={volume}\n            max=\"1\"\n            min=\"0\"\n            className=\"w-50\"\n          />\n          <h3>{recording}</h3>\n          {recording && (\n            <>\n              <button onClick={playRecording} className=\"btn btn-success\">\n                Play\n              </button>\n              <button\n                onClick={() => setRecording(\"\")}\n                className=\"btn btn-danger\"\n              >\n                Clear\n              </button>\n              <br />\n              <h4>Speed</h4>\n              <input\n                type=\"range\"\n                step=\"0.01\"\n                onChange={(e) => setSpeed(e.target.value)}\n                value={speed}\n                max=\"1.2\"\n                min=\"0.1\"\n                className=\"w-50\"\n              />\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Pad({ clip, volume, setRecording }) {\n  const [active, setActive] = React.useState(false);\n\n  React.useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyPress);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyPress);\n    };\n  });\n\n  /* useEffect hook runs as soon as component mounts, replacing all lifecycle methods. Empty dependency array runs only once. clean-up function removes eventListener */\n\n  const handleKeyPress = (e) => {\n    if (e.keyCode === clip.keyCode) {\n      playSound();\n    }\n  };\n\n  /* handleKeyPress function uses e parameter to operate when an event happens. If statement states that if the event keyCode equals the clip, play the clip (via playSound function. This activates the sound when the keyboard key corresponding to the button letter is pressed) */\n\n  const playSound = () => {\n    const audioTag = document.getElementById(clip.keyTrigger);\n    setActive(true);\n    setTimeout(() => setActive(false), 200);\n    audioTag.volume = volume;\n    audioTag.currentTime = 0;\n    audioTag.play();\n    setRecording((prev) => prev + clip.keyTrigger + \" \");\n  };\n\n  /* setTimeout turns off yellow colouring on button 200 milliseconds after press */\n\n  return (\n    <div\n      onClick={playSound}\n      className={`btn btn-secondary p-4 m-3 ${active && \"btn-warning\"}`}\n    >\n      {\" \"}\n      {/* turns button colour yellow when pressed */}\n      <audio className=\"clip\" id={clip.keyTrigger} src={clip.url} />\n      {clip.keyTrigger} {/* adds letters to buttons */}\n    </div>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}